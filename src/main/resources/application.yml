spring:
  application:
    name: openwms-config
  cloud:
    config:
      server:
        git:
          uri: https://github.com/spring-labs/org.openwms.zile
          search-paths: conf
          clone-on-start: true
          default-label: master
  security:
    user:
      name: user
      password: sa

owms:
  eureka:
    hostname: localhost
    port: 8761
    url: http://${owms.eureka.user.name}:${owms.eureka.user.password}@${owms.eureka.hostname}:${owms.eureka.port}
    user:
      name: user
      password: sa
    zone: ${owms.eureka.url}/eureka/
  srv:
    hostname: localhost
    protocol: http
  tracing:
    url: http://localhost:4317

server:
  port: ${PORT:8099}

eureka:
  client:
    healthcheck:
      enabled: true
    instance-info-replication-interval-seconds: 10 # default is 30
    registryFetchIntervalSeconds: 5 # SBA
    service-url:
      defaultZone: ${owms.eureka.zone} # Must be camelCase
  instance:
    hostname: ${owms.srv.hostname}
    # Request a lease with a validity of 5 seconds. If until then the
    # lease has not been renewed, it expires and the Eureka server can evict it.
    # Default: 90s
    lease-expiration-duration-in-seconds: 5

    # The cadence of lease renewal, i.e. how often a heartbeat is sent to Eureka server.
    # In this case every 2 seconds. Use this only for development / debugging. In production use the ...
    # Default: 30s
    lease-renewal-interval-in-seconds: 2
    metadata-map:
      group: CORE
      username: ${spring.security.user.name}
      password: ${spring.security.user.password}
      protocol: ${owms.srv.protocol}
      startup: ${random.int} # SBA
      zone: ${owms.eureka.zone}
      prometheus.scrape: "true"
      prometheus.path: "/actuator/prometheus"
      prometheus.port: ${server.port}
    non-secure-port-enabled: true
    prefer-ip-address: true
    secure-port-enabled: false

info:
  scm-url: "@scm.url@"
  build-url: "@ciManagement.url@"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    rabbit:
      enabled: false
  info:
    git:
      mode: simple
  metrics:
    distribution:
      percentiles-histogram:
        greeting: true
        http:
          server:
            requests: true
    tags:
      application: ${spring.application.name}
  otlp:
    tracing:
      endpoint: ${owms.tracing.url}
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    sampling:
      probability: 1.0

---
spring:
  config:
    activate:
      on-profile: native
  cloud:
    config:
      server:
        native:
          search-locations: classpath:config/
        bootstrap: true
