spring:
  application:
    name: openwms-config
  cloud:
    config:
      server:
        git:
          uri: https://github.com/spring-labs/org.openwms.zile
          search-paths: conf
          clone-on-start: true
          default-label: master
  security:
    user:
      name: user
      password: sa

owms:
  eureka:
    url: http://user:sa@localhost:8761
    zone: ${owms.eureka.url}/eureka/
  srv:
    hostname: localhost
    protocol: http

server:
  port: ${PORT:8099}

eureka:
  client:
    healthcheck:
      enabled: true
    instance-info-replication-interval-seconds: 10 # default is 30
    registryFetchIntervalSeconds: 5 # SBA
    service-url:
      defaultZone: ${owms.eureka.zone} # Must be camelCase
  instance:
    hostname: ${owms.srv.hostname}
    # Request a lease with a validity of 5 seconds. If until then the
    # lease has not been renewed, it expires and the Eureka server can evict it.
    # Default: 90s
    lease-expiration-duration-in-seconds: 5

    # The cadence of lease renewal, i.e. how often a heartbeat is sent to Eureka server.
    # In this case every 2 seconds. Use this only for development / debugging. In production use the ...
    # Default: 30s
    lease-renewal-interval-in-seconds:    2
    metadata-map:
      group: CORE
      username: ${spring.security.user.name}
      password: ${spring.security.user.password}
      protocol: ${owms.srv.protocol}
      startup: ${random.int} # SBA
      zone: ${owms.eureka.zone}
      "prometheus.scrape": "true"
      "prometheus.path": "/actuator/prometheus"
      "prometheus.port": "8099"
    non-secure-port-enabled: true
    prefer-ip-address: true
    secure-port-enabled: false

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    rabbit:
      enabled: false
  metrics:
    tags:
      application: ${spring.application.name}
  info:
    git:
      mode: simple
  prometheus:
    metrics:
      export:
        enabled: true

---
spring:
  config:
    activate:
      on-profile: native
  cloud:
    config:
      server:
        native:
          search-locations: classpath:config/
        bootstrap: true
